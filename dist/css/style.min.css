/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/**
 * Swiper 8.4.4
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * https://swiperjs.com
 *
 * Copyright 2014-2022 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: October 12, 2022
 */
@font-face {
  font-family: "swiper-icons";
  src: url("data:application/font-woff;charset=utf-8;base64, d09GRgABAAAAAAZgABAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAGRAAAABoAAAAci6qHkUdERUYAAAWgAAAAIwAAACQAYABXR1BPUwAABhQAAAAuAAAANuAY7+xHU1VCAAAFxAAAAFAAAABm2fPczU9TLzIAAAHcAAAASgAAAGBP9V5RY21hcAAAAkQAAACIAAABYt6F0cBjdnQgAAACzAAAAAQAAAAEABEBRGdhc3AAAAWYAAAACAAAAAj//wADZ2x5ZgAAAywAAADMAAAD2MHtryVoZWFkAAABbAAAADAAAAA2E2+eoWhoZWEAAAGcAAAAHwAAACQC9gDzaG10eAAAAigAAAAZAAAArgJkABFsb2NhAAAC0AAAAFoAAABaFQAUGG1heHAAAAG8AAAAHwAAACAAcABAbmFtZQAAA/gAAAE5AAACXvFdBwlwb3N0AAAFNAAAAGIAAACE5s74hXjaY2BkYGAAYpf5Hu/j+W2+MnAzMYDAzaX6QjD6/4//Bxj5GA8AuRwMYGkAPywL13jaY2BkYGA88P8Agx4j+/8fQDYfA1AEBWgDAIB2BOoAeNpjYGRgYNBh4GdgYgABEMnIABJzYNADCQAACWgAsQB42mNgYfzCOIGBlYGB0YcxjYGBwR1Kf2WQZGhhYGBiYGVmgAFGBiQQkOaawtDAoMBQxXjg/wEGPcYDDA4wNUA2CCgwsAAAO4EL6gAAeNpj2M0gyAACqxgGNWBkZ2D4/wMA+xkDdgAAAHjaY2BgYGaAYBkGRgYQiAHyGMF8FgYHIM3DwMHABGQrMOgyWDLEM1T9/w8UBfEMgLzE////P/5//f/V/xv+r4eaAAeMbAxwIUYmIMHEgKYAYjUcsDAwsLKxc3BycfPw8jEQA/gZBASFhEVExcQlJKWkZWTl5BUUlZRVVNXUNTQZBgMAAMR+E+gAEQFEAAAAKgAqACoANAA+AEgAUgBcAGYAcAB6AIQAjgCYAKIArAC2AMAAygDUAN4A6ADyAPwBBgEQARoBJAEuATgBQgFMAVYBYAFqAXQBfgGIAZIBnAGmAbIBzgHsAAB42u2NMQ6CUAyGW568x9AneYYgm4MJbhKFaExIOAVX8ApewSt4Bic4AfeAid3VOBixDxfPYEza5O+Xfi04YADggiUIULCuEJK8VhO4bSvpdnktHI5QCYtdi2sl8ZnXaHlqUrNKzdKcT8cjlq+rwZSvIVczNiezsfnP/uznmfPFBNODM2K7MTQ45YEAZqGP81AmGGcF3iPqOop0r1SPTaTbVkfUe4HXj97wYE+yNwWYxwWu4v1ugWHgo3S1XdZEVqWM7ET0cfnLGxWfkgR42o2PvWrDMBSFj/IHLaF0zKjRgdiVMwScNRAoWUoH78Y2icB/yIY09An6AH2Bdu/UB+yxopYshQiEvnvu0dURgDt8QeC8PDw7Fpji3fEA4z/PEJ6YOB5hKh4dj3EvXhxPqH/SKUY3rJ7srZ4FZnh1PMAtPhwP6fl2PMJMPDgeQ4rY8YT6Gzao0eAEA409DuggmTnFnOcSCiEiLMgxCiTI6Cq5DZUd3Qmp10vO0LaLTd2cjN4fOumlc7lUYbSQcZFkutRG7g6JKZKy0RmdLY680CDnEJ+UMkpFFe1RN7nxdVpXrC4aTtnaurOnYercZg2YVmLN/d/gczfEimrE/fs/bOuq29Zmn8tloORaXgZgGa78yO9/cnXm2BpaGvq25Dv9S4E9+5SIc9PqupJKhYFSSl47+Qcr1mYNAAAAeNptw0cKwkAAAMDZJA8Q7OUJvkLsPfZ6zFVERPy8qHh2YER+3i/BP83vIBLLySsoKimrqKqpa2hp6+jq6RsYGhmbmJqZSy0sraxtbO3sHRydnEMU4uR6yx7JJXveP7WrDycAAAAAAAH//wACeNpjYGRgYOABYhkgZgJCZgZNBkYGLQZtIJsFLMYAAAw3ALgAeNolizEKgDAQBCchRbC2sFER0YD6qVQiBCv/H9ezGI6Z5XBAw8CBK/m5iQQVauVbXLnOrMZv2oLdKFa8Pjuru2hJzGabmOSLzNMzvutpB3N42mNgZGBg4GKQYzBhYMxJLMlj4GBgAYow/P/PAJJhLM6sSoWKfWCAAwDAjgbRAAB42mNgYGBkAIIbCZo5IPrmUn0hGA0AO8EFTQAA") format("woff");
  font-weight: 400;
  font-style: normal;
}
:root {
  --swiper-theme-color: #007aff;
}

.swiper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  /* Fix of Webkit flickering */
  z-index: 1;
}

.swiper-vertical > .swiper-wrapper {
  flex-direction: column;
}

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: transform;
  box-sizing: content-box;
}

.swiper-android .swiper-slide,
.swiper-wrapper {
  transform: translate3d(0px, 0, 0);
}

.swiper-pointer-events {
  touch-action: pan-y;
}
.swiper-pointer-events.swiper-vertical {
  touch-action: pan-x;
}

.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  transition-property: transform;
}

.swiper-slide-invisible-blank {
  visibility: hidden;
}

/* Auto Height */
.swiper-autoheight,
.swiper-autoheight .swiper-slide {
  height: auto;
}
.swiper-autoheight .swiper-wrapper {
  align-items: flex-start;
  transition-property: transform, height;
}

.swiper-backface-hidden .swiper-slide {
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* 3D Effects */
.swiper-3d, .swiper-3d.swiper-css-mode .swiper-wrapper {
  perspective: 1200px;
}
.swiper-3d .swiper-wrapper,
.swiper-3d .swiper-slide,
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom,
.swiper-3d .swiper-cube-shadow {
  transform-style: preserve-3d;
}
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}
.swiper-3d .swiper-slide-shadow {
  background: rgba(0, 0, 0, 0.15);
}
.swiper-3d .swiper-slide-shadow-left {
  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-right {
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-top {
  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-bottom {
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

/* CSS Mode */
.swiper-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none; /* For Firefox */
  -ms-overflow-style: none; /* For Internet Explorer and Edge */
}
.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {
  display: none;
}
.swiper-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start;
}

.swiper-horizontal.swiper-css-mode > .swiper-wrapper {
  scroll-snap-type: x mandatory;
}

.swiper-vertical.swiper-css-mode > .swiper-wrapper {
  scroll-snap-type: y mandatory;
}

.swiper-centered > .swiper-wrapper::before {
  content: "";
  flex-shrink: 0;
  order: 9999;
}
.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {
  margin-inline-start: var(--swiper-centered-offset-before);
}
.swiper-centered.swiper-horizontal > .swiper-wrapper::before {
  height: 100%;
  width: var(--swiper-centered-offset-after);
}
.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {
  margin-block-start: var(--swiper-centered-offset-before);
}
.swiper-centered.swiper-vertical > .swiper-wrapper::before {
  width: 100%;
  height: var(--swiper-centered-offset-after);
}
.swiper-centered > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: center center;
}

/* ===============================
=            Choices            =
=============================== */
.choices {
  position: relative;
  overflow: hidden;
  margin-bottom: 24px;
}
.choices:focus {
  outline: none;
}
.choices:last-child {
  margin-bottom: 0;
}
.choices.is-open {
  overflow: visible;
}
.choices.is-disabled .choices__inner,
.choices.is-disabled .choices__input {
  cursor: not-allowed;
  user-select: none;
}
.choices.is-disabled .choices__item {
  cursor: not-allowed;
}
.choices [hidden] {
  display: none !important;
}

.choices[data-type*=select-one] {
  cursor: pointer;
}
.choices[data-type*=select-one] .choices__input {
  display: block;
  width: 100%;
  margin: 0;
}
.choices[data-type*=select-one] .choices__button {
  position: absolute;
  top: 50%;
  right: 0;
  margin-top: -10px;
  margin-right: 25px;
  height: 20px;
  width: 20px;
  opacity: 0.25;
}
.choices[data-type*=select-one] .choices__button:hover, .choices[data-type*=select-one] .choices__button:focus {
  opacity: 1;
}
.choices[data-type*=select-one] .choices__button:focus {
  box-shadow: 0 0 0 2px #00bcd4;
}
.choices[data-type*=select-one] .choices__item[data-value=""] .choices__button {
  display: none;
}
.choices[data-type*=select-one]::after {
  content: "";
  height: 0;
  width: 0;
  position: absolute;
  right: 11.5px;
  top: 50%;
  margin-top: -2.5px;
  pointer-events: none;
}
.choices[data-type*=select-one].is-open::after {
  margin-top: -7.5px;
}
.choices[data-type*=select-one][dir=rtl]::after {
  left: 11.5px;
  right: auto;
}
.choices[data-type*=select-one][dir=rtl] .choices__button {
  right: auto;
  left: 0;
  margin-left: 25px;
  margin-right: 0;
}

.choices[data-type*=select-multiple] .choices__inner,
.choices[data-type*=text] .choices__inner {
  cursor: text;
}
.choices[data-type*=select-multiple] .choices__button,
.choices[data-type*=text] .choices__button {
  position: relative;
  display: inline-block;
  margin-top: 0;
  margin-right: -4px;
  margin-bottom: 0;
  margin-left: 8px;
  width: 8px;
  opacity: 0.75;
}
.choices[data-type*=select-multiple] .choices__button:hover, .choices[data-type*=select-multiple] .choices__button:focus,
.choices[data-type*=text] .choices__button:hover,
.choices[data-type*=text] .choices__button:focus {
  opacity: 1;
}

.choices {
  transition: box-shadow 0.3s ease-in-out;
}

.choices__list {
  transition: box-shadow 0.3s ease-in-out;
}

.choices.is-open .choices__inner {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

.choices__inner {
  display: inline-block;
  transition: border-color 0.3s ease-in-out, border-radius 0.3s ease-in-out;
  border: 1px solid var(--color-iron);
  border-radius: 4px;
  vertical-align: top;
  width: 100%;
  overflow: hidden;
}

.choices__list {
  margin: 0;
  list-style: none;
}
.choices__list--single {
  display: inline-block;
  width: 100%;
}
.choices__list--single .choices__item {
  width: 100%;
}

.choices__list--multiple {
  display: inline;
}
.choices__list--multiple .choices__item {
  display: inline-block;
  vertical-align: middle;
  margin-right: 3.75px;
  margin-bottom: 3.75px;
  color: #fff;
  word-break: break-all;
}
[dir=rtl] .choices__list--multiple .choices__item {
  margin-right: 0;
  margin-left: 3.75px;
}

.choices__list--dropdown, .choices__list[aria-expanded] {
  visibility: hidden;
  z-index: 1;
  position: absolute;
  width: 100%;
  top: 100%;
  margin-top: -1px;
  word-break: break-all;
  will-change: visibility;
}
.is-active.choices__list--dropdown, .is-active.choices__list[aria-expanded] {
  visibility: visible;
}
.is-flipped .choices__list--dropdown, .is-flipped .choices__list[aria-expanded] {
  top: auto;
  bottom: 100%;
  margin-top: 0;
  margin-bottom: -1px;
}
.choices__list--dropdown .choices__list, .choices__list[aria-expanded] .choices__list {
  position: relative;
  max-height: 300px;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  will-change: scroll-position;
}
.choices__list--dropdown .choices__item, .choices__list[aria-expanded] .choices__item {
  position: relative;
}
[dir=rtl] .choices__list--dropdown .choices__item, [dir=rtl] .choices__list[aria-expanded] .choices__item {
  text-align: right;
}
@media (min-width: 640px) {
  .choices__list--dropdown .choices__item--selectable::after, .choices__list[aria-expanded] .choices__item--selectable::after {
    content: attr(data-select-text);
    opacity: 0;
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
  }
  [dir=rtl] .choices__list--dropdown .choices__item--selectable, [dir=rtl] .choices__list[aria-expanded] .choices__item--selectable {
    text-align: right;
  }
  [dir=rtl] .choices__list--dropdown .choices__item--selectable::after, [dir=rtl] .choices__list[aria-expanded] .choices__item--selectable::after {
    right: auto;
    left: 10px;
  }
}
.choices__list--dropdown .choices__item--selectable.is-highlighted::after, .choices__list[aria-expanded] .choices__item--selectable.is-highlighted::after {
  opacity: 0.5;
}

.choices__list--dropdown {
  opacity: 0;
  visibility: hidden;
  max-height: 300px;
  overflow-y: auto;
  border: 1px solid var(--color-primary);
  opacity: 0.4;
  border-radius: 4px;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  transition: visibility 0.3s ease-in-out, opacity 0.3s ease-in-out;
}
.choices__list--dropdown.is-active {
  opacity: 1;
  visibility: visible;
}

.choices__item {
  cursor: default;
  transition: background-color 0.3s ease-in-out;
}

.choices__item--selectable {
  cursor: pointer;
}

.choices__item--disabled {
  cursor: not-allowed;
  user-select: none;
  opacity: 0.5;
}

.choices__heading {
  color: gray;
}

.choices__button {
  text-indent: -9999px;
  appearance: none;
  cursor: pointer;
}
.choices__button:focus {
  outline: none;
}

.choices__input {
  display: inline-block;
  vertical-align: baseline;
  margin-bottom: 5px;
  max-width: 100%;
}
.choices__input:focus {
  outline: 0;
}
.choices__input::-webkit-search-decoration, .choices__input::-webkit-search-cancel-button, .choices__input::-webkit-search-results-button, .choices__input::-webkit-search-results-decoration {
  display: none;
}
.choices__input::-ms-clear, .choices__input::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.choices__placeholder {
  opacity: 0.5;
}

.is-highlighted {
  background-color: var(--color-athens-gray);
}

.is-selected,
.choices__item.choices__item--choice.choices__placeholder {
  display: none;
}

.choices__inner .choices__item {
  position: relative;
}
.choices__inner .choices__item::before {
  content: "";
  position: absolute;
  top: 50%;
  right: 16px;
  width: 16px;
  height: 16px;
  transform: translateY(-50%);
  transition: transform 0.2s ease-in-out;
  background: url("../img/global/down-chevron.svg") no-repeat center/contain;
}

.choices.is-open .choices__inner .choices__item::before {
  transform: translateY(-50%) rotate(-180deg);
}

/* =====  End of Choices  ====== */
*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  margin: 0;
  padding: 0;
  scroll-behavior: smooth;
  background-color: var(--color-bg);
  font-family: var(--font-family-base);
  font-weight: var(--font-weight-base);
  font-size: var(--font-size-base);
  line-height: var(--line-height-base);
  font-style: var(--font-style-base);
}

* {
  outline: none;
}

b,
big,
i,
small,
tt abbr,
acronym,
cite,
code,
dfn,
em,
kbd,
strong,
samp,
time,
var a,
bdo,
br,
map,
object,
q,
span,
sub,
sup button,
input,
label,
select,
textarea {
  display: inline-block;
}

ul,
ol {
  list-style: none;
  margin: 0;
  padding: 0;
}

a {
  text-decoration: none;
  color: inherit;
}

input,
button,
textarea,
select {
  border: none;
  background: none;
  padding: 0;
  appearance: none;
  outline: none;
}

button {
  cursor: pointer;
}

textarea {
  resize: none;
}

img {
  max-width: 100%;
}

input[type=text]::-ms-clear {
  display: none;
  width: 0;
  height: 0;
}

input[type=text]::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration {
  display: none;
}

.wrapper {
  max-width: 1920px;
  min-width: 280px;
  min-height: 100%;
  margin: 0 auto;
  overflow-x: hidden;
}

.container {
  max-width: 1260px;
  padding-left: 15px;
  padding-right: 15px;
  margin: 0 auto;
}

.site-container {
  overflow: hidden;
}

.vhidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  clip: rect(0 0 0 0);
  overflow: hidden;
}

.hidden {
  visibility: hidden;
  opacity: 0;
}

.main-title {
  margin: 0;
  margin-bottom: 25px;
  color: var(--color-ebony);
  font-weight: 700;
  font-size: 72px;
  line-height: 1.3055555556;
  letter-spacing: 1px;
  text-transform: uppercase;
}
.main-title span {
  color: var(--color-primary);
}
.main-title--home {
  color: var(--color-white);
}

.main-descr {
  margin: 0;
  color: var(--color-storm);
  font-size: 20px;
  line-height: 1.5;
}
.main-descr--home {
  color: var(--color-white);
  margin-bottom: 60px;
}

.title {
  margin: 0;
  margin-bottom: 25px;
  font-weight: 700;
  font-size: 46px;
  line-height: 1.3043478261;
  color: var(--color-ebony);
}

.subtitle {
  margin: 0;
  margin-bottom: 60px;
  font-size: 18px;
  line-height: 1.5;
  color: var(--color-storm);
}

.btn {
  display: inline-block;
  font-weight: 700;
  letter-spacing: 0.5px;
  text-transform: uppercase;
  border-radius: 4px;
  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out, border-color 0.3s ease-in-out, opacity 0.3s ease-in-out;
}
.btn-outline-white {
  border: 1px solid var(--color-white);
  background-color: transparent;
  color: var(--color-white);
}
.btn-outline-white:focus-visible {
  color: var(--color-ebony);
  border-color: var(--color-white);
  background-color: var(--color-white);
}
.btn-outline-white:hover {
  color: var(--color-ebony);
  border-color: var(--color-white);
  background-color: var(--color-white);
}
.btn-outline-white:active {
  color: var(--color-ebony);
  border-color: var(--color-white);
  background-color: var(--color-white);
}
.btn-solid-orange {
  border: 1px solid var(--color-primary);
  background-color: var(--color-primary);
  color: var(--color-white);
}
.btn-solid-orange:focus-visible {
  color: var(--color-white);
  border-color: var(--color-active);
  background-color: var(--color-active);
}
.btn-solid-orange:hover {
  color: var(--color-white);
  border-color: var(--color-active);
  background-color: var(--color-active);
}
.btn-solid-orange:active {
  color: var(--color-white);
  border-color: var(--color-active);
  background-color: var(--color-active);
}
.btn-outline-orange {
  border: 1px solid var(--color-primary);
  background-color: transparent;
  color: var(--color-primary);
}
.btn-outline-orange:focus-visible {
  color: var(--color-white);
  border-color: var(--color-active);
  background-color: var(--color-active);
}
.btn-outline-orange:hover {
  color: var(--color-white);
  border-color: var(--color-active);
  background-color: var(--color-active);
}
.btn-outline-orange:active {
  color: var(--color-white);
  border-color: var(--color-active);
  background-color: var(--color-active);
}

.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: var(--grid-gap);
}

.slider-nav {
  display: flex;
  align-items: center;
  position: relative;
  z-index: 15;
  user-select: none;
}
.slider-nav__btn {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 100%;
  width: 48px;
  height: 48px;
  color: var(--color-gray);
  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
}
.slider-nav__btn svg {
  display: block;
  width: 24px;
  height: 24px;
  color: inherit;
  fill: currentColor;
  object-fit: cover;
}
.slider-nav__btn:focus-visible {
  color: var(--color-white);
  background-color: var(--color-primary);
}
.slider-nav__btn:hover {
  color: var(--color-white);
  background-color: var(--color-primary);
}
.slider-nav__btn:active {
  color: var(--color-white);
  background-color: var(--color-active);
}

.slider-nav__btn.swiper-button-disabled {
  opacity: 0.4;
  pointer-events: none;
}

.portfolio-item {
  overflow: hidden;
  border-radius: 4px;
  box-shadow: var(--small-shadow);
  background-color: var(--color-white);
}
.portfolio-item:focus-within .portfolio-item__images, .portfolio-item:hover .portfolio-item__images, .portfolio-item:active .portfolio-item__images {
  height: 277px;
}
.portfolio-item:focus-within .portfolio-item__btn-block, .portfolio-item:hover .portfolio-item__btn-block, .portfolio-item:active .portfolio-item__btn-block {
  height: 44px;
  margin-top: 24px;
  visibility: visible;
  opacity: 1;
}
.portfolio-item__images {
  width: 100%;
  height: 345px;
  object-fit: cover;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  transition: height 0.5s ease-in-out;
}
.portfolio-item__content {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  padding: 16px 20px 24px;
}
.portfolio-item__title {
  margin: 0;
  margin-bottom: 5px;
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.portfolio-item__descr {
  margin: 0;
  display: inline-block;
  font-size: 14px;
  line-height: 1.5;
  color: var(--color-storm);
}
.portfolio-item__btn {
  display: block;
  padding: 13px 31px;
  font-size: 14px;
}
.portfolio-item__btn-block {
  visibility: hidden;
  opacity: 0;
  height: 0;
  transition: all 0.5s ease-in-out;
}

.field {
  text-align: left;
}
.field_disabled {
  opacity: 0.6;
}
.field input,
.field textarea {
  border: none;
  background-color: var(--color-athens);
  border: 1px solid var(--color-iron);
  border-radius: 4px;
  color: var(--color-ebony);
  width: 100%;
  transition: box-shadow 0.2s ease-in-out, border-color 0.2s ease-in-out;
}
.field input:focus-visible, .field input:hover, .field input:active,
.field textarea:focus-visible,
.field textarea:hover,
.field textarea:active {
  border-color: var(--color-primary);
  box-shadow: var(--input-shadow);
}
.field input::placeholder,
.field textarea::placeholder {
  color: var(--color-manatee);
}
.field-large {
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-gray);
}
.field-large input,
.field-large textarea {
  font-size: 16px;
  line-height: 1.625;
  padding: 12px 16px;
}
.field-default {
  font-size: 14px;
  line-height: 1.5;
  color: var(--color-gray);
}
.field-default input,
.field-default textarea {
  font-size: 14px;
  line-height: 1.5;
  padding: 10px 16px 11px;
}
.field-small {
  font-size: 12px;
  line-height: 1.5;
  color: var(--color-gray);
}
.field-small input,
.field-small textarea {
  font-size: 12px;
  line-height: 1.5;
  padding: 8px 12px;
}

.select {
  text-align: left;
}
.select:hover .choices__inner,
.select:hover .choices__list.choices__list--dropdown, .select:focus-visible .choices__inner,
.select:focus-visible .choices__list.choices__list--dropdown, .select:active .choices__inner,
.select:active .choices__list.choices__list--dropdown {
  border-color: var(--color-primary);
  box-shadow: var(--input-shadow);
}
.select_disabled {
  opacity: 0.6;
}
.select-large {
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-gray);
}
.select-large .choices__item {
  font-size: 16px;
  line-height: 1.625;
  padding: 12px 16px;
}
.select-large .choices__inner .choices__item::before {
  width: 20px;
  height: 20px;
  right: 16px;
}
.select-default {
  font-size: 14px;
  line-height: 1.5;
  color: var(--color-gray);
}
.select-default .choices__item {
  font-size: 14px;
  line-height: 1.5;
  padding: 10px 16px 11px;
}
.select-default .choices__inner .choices__item::before {
  width: 16px;
  height: 16px;
  right: 16px;
}
.select-small {
  font-size: 12px;
  line-height: 1.5;
  color: var(--color-gray);
}
.select-small .choices__item {
  font-size: 12px;
  line-height: 1.5;
  padding: 8px 12px;
}
.select-small .choices__inner .choices__item::before {
  width: 16px;
  height: 16px;
  right: 12px;
}

.attach {
  cursor: pointer;
  display: grid;
  grid-template-columns: 0fr 1fr;
  gap: 12px;
}
.attach span {
  font-size: 14px;
  line-height: 1.5;
  align-self: center;
  justify-self: start;
}
.attach svg {
  width: 26px;
  height: 26px;
  fill: var(--color-primary);
}
.attach--active {
  color: #1831d1;
}

:root {
  --font-family-base: "Ubuntu";
  --line-height-base: 1;
  --font-style-base: normal;
  --color-bg: #fff;
  --color-black: #000;
  --color-white: #fff;
  --color-gray: #424551;
  --color-storm: #787a80;
  --color-ebony: #1e212c;
  --color-primary: #ff5a30;
  --color-athens: #f4f5f7;
  --color-active: #fc3300;
  --color-manatee: #9a9ca5;
  --color-blue: #5a87fc;
  --color-athens-gray: #e5e8ed;
  --color-iron: #d7dadd;
  --color-white-rgba: 255, 255, 255;
  --grid-gap: 30px;
  --hero-slider-speed: 500;
  --small-shadow: 0px 80px 80px -20px rgba(154, 156, 165, 0.08),
     0px 30px 24px -10px rgba(154, 156, 165, 0.05),
     0px 12px 10px -6px rgba(154, 156, 165, 0.04),
     0px 4px 4px -4px rgba(30, 33, 44, 0.03);
  --regular-shadow: 0px 80px 80px -20px rgba(154, 156, 165, 0.16),
     0px 30px 24px -10px rgba(154, 156, 165, 0.1),
     0px 12px 10px -6px rgba(154, 156, 165, 0.08),
     0px 4px 4px -4px rgba(30, 33, 44, 0.05);
  --large-shadow: 0px 60px 80px -20px rgba(30, 33, 44, 0.16),
     0px 26px 24px -10px rgba(30, 33, 44, 0.1),
     0px 12px 10px -6px rgba(30, 33, 44, 0.08),
     0px 4px 4px -4px rgba(30, 33, 44, 0.05);
  --input-shadow: 0px 80px 80px -20px rgba(255, 90, 48, 0.08),
     0px 30px 24px -10px rgba(255, 90, 48, 0.05),
     0px 12px 10px -6px rgba(255, 90, 48, 0.04),
     0px 4px 4px -4px rgba(30, 33, 44, 0.03);
  --breakpoints: (
     xs: 0,
     sm: 576px,
     md: 768px,
     lg: 992px,
     xl: 1200px,
     xxl: 1400px
  );
}
@keyframes fill-bar {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}
@font-face {
  font-family: Lato;
  font-display: swap;
  src: url("../fonts/Lato-Bold.woff2") format("woff2"), url("../fonts/Lato-Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: Ubuntu;
  font-display: swap;
  src: url("../fonts/Ubuntu-Bold.woff2") format("woff2"), url("../fonts/Ubuntu-Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: Ubuntu;
  font-display: swap;
  src: url("../fonts/Ubuntu-Regular.woff2") format("woff2"), url("../fonts/Ubuntu-Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: Lato;
  font-display: swap;
  src: url("../fonts/Lato-Black.woff2") format("woff2"), url("../fonts/Lato-Black.woff") format("woff");
  font-weight: 900;
  font-style: normal;
}
.header {
  padding-top: 23px;
  padding-bottom: 21px;
}
.header--main {
  background-color: var(--color-white);
}
.header--two {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
}
.header__container {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.header__nav {
  margin-left: -112px;
}
@media (max-width: 1200px) {
  .header__nav {
    margin-left: 0;
  }
}

.logo {
  outline-offset: 5px;
  outline: 2px solid transparent;
  border-radius: 4px;
  transition: outline-color 0.2s ease-in-out;
}
.logo:focus-visible {
  color: var(--color-primary);
}
.logo:hover {
  outline-color: var(--color-primary);
}
.logo:active {
  color: var(--color-active);
}
@media (max-width: 1200px) {
  .logo {
    max-width: 100px;
  }
}

.nav__list {
  display: flex;
  align-items: center;
}
.nav__item:not(:last-child) {
  margin-right: 40px;
}
.nav__link {
  font-weight: 700;
  line-height: 26px;
  color: var(--color-gray);
  transition: color 0.3s ease-in-out;
}
.nav__link--active {
  color: var(--color-active);
}
.nav__link:focus-visible {
  color: var(--color-primary);
}
.nav__link:hover {
  color: var(--color-primary);
}
.nav__link:active {
  color: var(--color-active);
}

.header-contacts {
  display: flex;
  align-items: center;
}
.header-contacts__link {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.header-contacts__link:not(:last-child) {
  margin-right: 35px;
}

.contacts-link {
  padding-left: 53px;
  background-position: left center;
  background-repeat: no-repeat;
  background-size: 40px;
}
@media (max-width: 1200px) {
  .contacts-link {
    background-size: 35px;
  }
}
.contacts-link--call {
  background-image: url("../img/phone.svg");
}
.contacts-link--mail {
  background-image: url("../img/mail.svg");
}
.contacts-link__caption {
  font-weight: 700;
  font-size: 14px;
  line-height: 1.5;
  color: var(--color-gray);
}
.contacts-link__value {
  font-size: 18px;
  line-height: 1.5;
  color: var(color-ebony);
  transition: color 0.3s ease-in-out;
}
@media (max-width: 1200px) {
  .contacts-link__value {
    font-size: 16px;
    line-height: 1.3125;
  }
}
.contacts-link:focus-visible .contacts-link__value {
  color: var(--color-primary);
}
.contacts-link:hover .contacts-link__value {
  color: var(--color-primary);
}
.contacts-link:active .contacts-link__value {
  color: var(--color-active);
}

.hero__slider {
  position: relative;
  overflow: hidden;
  width: 100%;
}
.hero__slider .swiper-pagination {
  position: absolute;
  bottom: 120px;
  left: calc((100vw - 1230px) / 2);
  z-index: 10;
  display: grid;
  grid-auto-flow: column;
  align-items: center;
  column-gap: 4px;
  width: auto;
  height: auto;
  color: var(--color-white);
}
@media (max-width: 1200px) {
  .hero__slider .swiper-pagination {
    left: calc((100vw - 1170px) / 2);
  }
}
.hero__slider .swiper-pagination-bullet {
  display: grid;
  justify-items: start;
  row-gap: 12px;
  font-weight: 700;
  font-size: 28px;
  line-height: 1.5;
  color: rgba(var(--color-white-rgba), 0.6);
  transition: color 0.3s ease-in-out, outline-color 0.3s ease-in-out;
  outline: 2px solid transparent;
  border-radius: 3px;
}
.hero__slider .swiper-pagination-bullet:focus-visible {
  outline-color: var(--color-white);
}
.hero__slider .swiper-pagination-bullet-active {
  color: var(--color-white);
}
.hero__slider .swiper-pagination-bullet-active .swiper-pagination-bullet-bar::after {
  animation: fill-bar 1.5s ease-in-out 1;
  width: 100%;
}
.hero__slider .swiper-pagination-bullet-bar {
  position: relative;
  width: 178px;
  height: 2px;
  border-radius: 2px;
  background-color: rgba(var(--color-white-rgba), 0.6);
  transition: background-color 0.3s ease-in-out;
}
.hero__slider .swiper-pagination-bullet-bar::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: var(--color-white);
}
.hero__slide {
  padding-top: 220px;
  padding-bottom: 354px;
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  background-color: var(--color-gray);
}
.hero__prev {
  position: absolute;
  left: 32px;
  top: 50%;
  z-index: 30;
  background-color: rgba(var(--color-white-rgba), 0.5);
  transform: translateY(-50%);
}
.hero__prev:focus-visible, .hero__prev:hover, .hero__prev:active {
  background-color: var(--color-white);
  color: var(--color-ebony);
}
@media (max-width: 1440px) {
  .hero__prev {
    display: none;
  }
}
.hero__next {
  position: absolute;
  right: 32px;
  top: 50%;
  z-index: 30;
  background-color: rgba(var(--color-white-rgba), 0.5);
  transform: translateY(-50%);
}
.hero__next:focus-visible, .hero__next:hover, .hero__next:active {
  background-color: var(--color-white);
  color: var(--color-ebony);
}
@media (max-width: 1440px) {
  .hero__next {
    display: none;
  }
}
.hero__bg--1 {
  background-image: url("../img/hero-bg.jpg");
}
.hero__content {
  max-width: 590px;
}
.hero__btn {
  font-size: 16px;
  padding: 17px 38px;
}
.hero__btn:not(:last-child) {
  margin-right: 25px;
}

.about-section {
  padding-top: 120px;
  padding-bottom: 60px;
  background-color: var(--color-white);
}
.about-section__container {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.video-block {
  width: 100%;
  position: relative;
  overflow: hidden;
  border-radius: 4px;
  height: 500px;
}
.video-block::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  opacity: 1;
  z-index: 3;
  background-color: rgba(30, 33, 44, 0.6);
  transition: background-color 0.3s ease-in-out, visibility 0.3s ease-in-out;
}
.video-block--played::before {
  opacity: 0;
  visibility: hidden;
}
.video-block__play {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  left: 50%;
  top: 50%;
  z-index: 10;
  border-radius: 100%;
  width: 80px;
  height: 80px;
  background-color: var(--color-primary);
  transform: translate(-50%, -50%);
  outline: 0px solid transparent;
  transition: outline 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
}
.video-block__play:focus-visible, .video-block__play:hover, .video-block__play:active {
  outline: 16px solid rgba(255, 90, 48, 0.12);
}
.video-block__play svg {
  width: 26px;
  height: 26px;
  fill: var(--color-white);
}
.video-block__play--played {
  opacity: 0;
  visibility: hidden;
}
.video-block__content {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.mission__container {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
}
.mission--index {
  padding-top: 120px;
  padding-bottom: 27px;
  background-color: var(--color-white);
}
.mission--about {
  padding-top: 79px;
  padding-bottom: 80px;
  background-color: var(--color-athens);
}
.mission--positions {
  padding-top: 97px;
  padding-bottom: 180px;
  background-color: var(--color-white);
}
.mission__list {
  --mission-gap: 94px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: calc(var(--mission-gap) * 2);
}
.mission__item {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.mission__item svg {
  width: 48px;
  height: 48px;
  fill: var(--color-primary);
  margin-bottom: 24px;
}
.mission__item:not(:last-child)::after {
  content: "";
  position: absolute;
  right: calc(-1 * var(--mission-gap));
  top: 0;
  width: 1px;
  height: 100%;
  background-image: url("../img/divider.svg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.mission__item-title {
  margin: 0;
  margin-bottom: 8px;
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.mission__item-descr {
  margin: 0;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-storm);
}

.know-form__block {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
  transform: translateY(93px);
  padding: 47px 60px;
  box-shadow: var(--small-shadow);
  background-color: var(--color-white);
}
.know-form__title {
  margin: 0;
  margin-bottom: 33px;
  font-weight: 700;
  font-size: 28px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.know-form__content {
  display: grid;
  grid-template-columns: minmax(200px, 260px) minmax(200px, 260px) minmax(300px, 414px) 1fr;
  column-gap: 24px;
  row-gap: 24px;
}
.know-form__field span {
  margin-bottom: 8px;
}
.know-form__btn {
  font-size: 14px;
  padding: 13px 31px;
  justify-self: start;
  align-self: end;
}

.services-section {
  padding-top: 212px;
  padding-bottom: 80px;
  background-image: url("../img/services-bg.jpg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.services-section__container {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
}

.services-list {
  width: 100%;
  margin-bottom: 84px;
}
.services-list__item {
  position: relative;
  border-radius: 4px;
  box-shadow: var(--small-shadow);
  background: var(--color-white);
}

.services-item {
  position: relative;
  display: block;
  border-radius: 4px;
  padding: 0 10px;
  padding-top: 87px;
  padding-bottom: 90px;
  box-shadow: var(--small-shadow);
  background: var(--color-white);
}
.services-item::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 3;
  border-radius: inherit;
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  background-color: var(--color-ebony);
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}
.services-item::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 5;
  border-radius: inherit;
  background-color: rgba(30, 33, 44, 0.6);
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}
.services-item--construct::before {
  background-image: url("../img/services-1.jpg");
}
.services-item:hover::before {
  opacity: 0.7;
}
.services-item:hover::after {
  opacity: 0.7;
}
.services-item:hover .services-item__icon {
  fill: var(--color-white);
}
.services-item:hover .services-item__title {
  color: var(--color-white);
}
.services-item__content {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  z-index: 10;
}
.services-item__icon {
  margin-bottom: 23px;
  width: 52px;
  height: 52px;
  object-fit: cover;
  fill: var(--color-primary);
  transition: fill 0.3s ease-in-out;
}
.services-item__title {
  margin: 0;
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  text-align: center;
  color: var(--color-ebony);
  transition: color 0.3s ease-in-out;
}

.learn-more {
  display: flex;
  align-items: center;
  justify-content: center;
}
.learn-more__subtitle {
  margin: 0;
  margin-right: 40px;
  font-weight: 700;
  font-size: 28px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.learn-more__btn {
  font-size: 16px;
  padding: 16px 39px;
}

.services-section__list {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(285px, 1fr));
  gap: 30px;
  margin-bottom: 84px;
}
@media (max-width: 1440px) {
  .services-section__list {
    grid-template-columns: repeat(auto-fit, minmax(265px, 1fr));
  }
}
@media (max-width: 1200px) {
  .services-section__list {
    grid-template-columns: repeat(auto-fit, minmax(225px, 1fr));
  }
}
.services-section__item {
  display: flex;
  flex-direction: column;
  border-radius: 4px;
  box-shadow: var(--small-shadow);
  background: var(--color-white);
}
.services-section__item-link {
  position: relative;
  border-radius: 4px;
  padding: 90px 0;
}
.services-section__item-link::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 1;
  border-radius: inherit;
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  background-color: var(--color-ebony);
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}
.services-section__item-link::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 2;
  border-radius: inherit;
  background-color: rgba(30, 33, 44, 0.6);
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}
.services-section__item-link--construct::before {
  background-image: url("../img/services-1.jpg");
}
.services-section__item-link:hover::before {
  opacity: 0.7;
}
.services-section__item-link:hover::after {
  opacity: 0.7;
}
.services-section__item-link:hover .services-section__item-icon {
  fill: var(--color-white);
}
.services-section__item-link:hover .services-section__item-title {
  color: var(--color-white);
}
.services-section__item-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  z-index: 3;
}
.services-section__item-icon {
  margin-bottom: 23px;
  width: 52px;
  height: 52px;
  object-fit: cover;
  fill: var(--color-primary);
  transition: fill 0.3s ease-in-out;
}
.services-section__item-title {
  margin: 0;
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  text-align: center;
  color: var(--color-ebony);
  transition: color 0.3s ease-in-out;
}

.portfolio-section {
  padding-top: 120px;
  padding-bottom: 122px;
  background-color: var(--color-white);
}
.portfolio-section__top {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  margin-bottom: 60px;
}
.portfolio-section__title {
  margin: 0;
  max-width: 710px;
  text-align: left;
}
.portfolio-section__slider-nav {
  transform: translate(12px, 12px);
}
.portfolio-section__items {
  margin-bottom: 80px;
  overflow: unset;
  overflow-x: clip;
}

.partners--index {
  padding-top: 80px;
  padding-bottom: 80px;
  background-color: var(--color-athens);
}
.partners--services-2 {
  padding-top: 80px;
  padding-bottom: 115px;
  background-color: var(--color-athens);
}
.partners--work {
  padding-top: 180px;
  padding-bottom: 117px;
  background-color: var(--color-white);
}
.partners--about {
  padding-top: 120px;
  padding-bottom: 80px;
}
.partners--about .partners__title {
  margin-bottom: 25px;
}
.partners__container {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
}
.partners__title {
  margin-bottom: 60px;
}
.partners__list {
  width: 100%;
  display: grid;
  row-gap: 40px;
  grid-template-columns: repeat(6, 1fr);
  column-gap: 102px;
}
.partners__link:focus-visible .partners__logo {
  filter: grayscale(0);
}
.partners__link:hover .partners__logo {
  filter: grayscale(0);
}
.partners__link:active .partners__logo {
  filter: grayscale(0);
}
.partners__logo {
  width: 100%;
  height: 64px;
  object-fit: contain;
  filter: grayscale(100%);
  transition: filter 0.3s ease-in-out;
}

.testimonials {
  background-color: var(--color-athens);
}
.testimonials--index {
  padding-top: 97px;
}
.testimonials--work {
  padding-top: 81px;
}
.testimonials__container {
  display: grid;
  grid-auto-flow: column;
  column-gap: 30px;
  justify-content: space-between;
}
.testimonials__content {
  max-width: 612px;
}
.testimonials__title {
  margin-bottom: 60px;
  text-align: left;
}
.testimonials__items {
  position: relative;
  padding-bottom: 12px;
}
.testimonials__slider-nav {
  position: absolute;
  right: 0;
  bottom: 0;
}
.testimonials__image {
  max-width: 495px;
  position: relative;
  z-index: 5;
  margin-bottom: -60px;
}

.testimonials-item__image {
  overflow: hidden;
  margin-bottom: 24px;
  border-radius: 100%;
  width: 72px;
  height: 72px;
}
.testimonials-item__image img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.testimonials-item__descr {
  margin: 0;
  margin-bottom: 24px;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-gray);
}
.testimonials-item__author {
  display: block;
  margin-bottom: 4px;
  padding-right: 110px;
  font-weight: 700;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-ebony);
}
.testimonials-item__author-position {
  display: block;
  padding-right: 110px;
  font-size: 14px;
  line-height: 1.5;
  color: var(--color-storm);
}

.facts-news-bg {
  position: relative;
  overflow: hidden;
}
.facts-news-bg::before {
  content: "";
  position: absolute;
  top: -95px;
  left: -627px;
  transform: rotate(127deg);
  width: 1066px;
  height: 859px;
  background-image: url("../img/facts-bg-2.png");
  opacity: 0.3;
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
}

.facts {
  padding-top: 181px;
  padding-bottom: 120px;
  background-color: var(--color-white);
}
.facts__container {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
}
.facts__title {
  margin-bottom: 62px;
}
.facts__list {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  margin: 0 auto;
  max-width: 736px;
  gap: 48px;
}

.facts-element__circle {
  --progress-stroke: var(--color-white);
  --progress-bg-opacity: 0.3;
  position: relative;
  margin-bottom: 17px;
  width: 148px;
  height: 148px;
}
.facts-element__circle svg {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}
.facts-element__circle--one-color {
  --progress-stroke: #f89828;
}
.facts-element__circle--two-color {
  --progress-stroke: #f52f6e;
}
.facts-element__circle--three-color {
  --progress-stroke: #5a87fc;
}
.facts-element__circle--four-color {
  --progress-stroke: #03cea4;
}
.facts-element__value {
  position: absolute;
  left: 50%;
  top: 50%;
  font-weight: 700;
  font-size: 32px;
  line-height: 1.5;
  color: var(--color-ebony);
  transform: translate(-50%, -50%);
}
.facts-element__text {
  display: block;
  font-size: 14px;
  line-height: 1.5;
  text-align: center;
  color: var(--color-ebony);
}

.progress-bg {
  stroke: var(--progress-stroke);
  opacity: var(--progress-bg-opacity);
}

.progress {
  stroke: var(--progress-stroke);
  transform: rotate(-90deg) translateX(20px);
  transform-origin: center;
}

.news {
  padding-top: 60px;
  padding-bottom: 122px;
  background-color: var(--color-white);
}
.news__container {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
}
.news__title {
  margin-bottom: 60px;
}
.news__list {
  grid-template-rows: repeat(2, 255px);
  margin-bottom: 80px;
}
.news__item:nth-child(1) {
  grid-column: 7 span;
  grid-row: 2 span;
}
.news__item:nth-child(2) {
  grid-column: 5 span;
}
.news__item:nth-child(3) {
  grid-column: 5 span;
}

.news-article {
  overflow: hidden;
  height: 100%;
  border-radius: 4px;
  box-shadow: var(--small-shadow);
  background-color: var(--color-white);
}
.news-article--small .news-article__title {
  margin-bottom: 8px;
}
.news-article--small .news-article__descr {
  display: none;
}
.news-article--small .news-article__text {
  padding: 12px 24px;
}
.news-article__text {
  padding: 21px 23px;
  text-align: left;
}
.news-article__title {
  margin: 0;
  margin-bottom: 13px;
}
.news-article__link {
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.news-article__meta {
  margin-bottom: 16px;
}
.news-article__descr {
  overflow: hidden;
  margin: 0;
  height: 51px;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-gray);
}
.news-article a:focus-visible,
.news-article a:hover,
.news-article a:active {
  color: var(--color-primary);
}

.article-meta {
  font-size: 14px;
  line-height: 1.5;
  color: var(--color-storm);
}
.article-meta__item {
  position: relative;
}
.article-meta__item:not(:last-child) {
  margin-right: 21px;
}
.article-meta__item:not(:last-child)::after {
  position: absolute;
  content: "";
  right: -13px;
  top: 2px;
  width: 1px;
  height: 12px;
  color: inherit;
  background-color: currentColor;
}
.article-meta__item--comments {
  padding-left: 24px;
  background-image: url("../img/comments.svg");
  background-position: left center;
  background-size: 16px 16px;
  background-repeat: no-repeat;
}

.contacts-section {
  padding-top: 80px;
  padding-bottom: 80px;
  background-image: url("../img/contacts-bg.jpg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  background-color: var(--color-ebony);
}
.contacts-section__container {
  display: grid;
  justify-content: flex-end;
  align-items: flex-start;
}
.contacts-section__form {
  border-radius: 4px;
  max-width: 495px;
  background-color: var(--color-white);
  padding: 44px 40px;
  box-shadow: var(--large-shadow);
}
.contacts-section__checkbox-btn {
  display: grid;
  grid-template-columns: 1fr;
  row-gap: 22px;
}
.contacts-section__checkbox {
  font-size: 14px;
  line-height: 1.5;
  color: var(--color-gray);
}
.contacts-section__btn {
  justify-self: center;
  align-self: end;
  padding: 13px 32px;
  font-size: 14px;
}

.contacts-form__title {
  margin: 0;
  margin-bottom: 24px;
  width: 100%;
  font-weight: 700;
  font-size: 28px;
  line-height: 1.5;
  text-align: center;
  color: var(--color-ebony);
}
.contacts-form__field-block {
  display: grid;
  grid-template-columns: 1fr;
  row-gap: 20px;
  margin-bottom: 18px;
}
.contacts-form__field-block span {
  margin-bottom: 8px;
}

.checkbox span {
  display: grid;
  grid-auto-flow: column;
  column-gap: 12px;
}
.checkbox span::before {
  content: "";
  width: 16px;
  height: 16px;
  margin-top: 2px;
  background-color: var(--color-white);
  border: 1px solid #b3b7bc;
  border-radius: 3px;
  transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}
.checkbox input:checked + span::before {
  border-color: var(--color-primary);
  background: var(--color-primary) url("../img/global/check.svg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.checkbox input:disabled + span {
  opacity: 0.5;
}
.checkbox:hover input + span::before, .checkbox:focus-visible input + span::before, .checkbox:active input + span::before {
  border-color: var(--color-primary);
  box-shadow: var(--input-shadow);
}

.footer {
  padding-top: 80px;
  padding-bottom: 80px;
  color: rgba(var(--color-white-rgba), 0.6);
  background-color: var(--color-ebony);
}
.footer__top {
  display: grid;
  grid-auto-flow: column;
  justify-content: space-between;
  column-gap: 60px;
  margin-bottom: 60px;
}
.footer__momentous {
  max-width: 493px;
}
.footer__logo-social {
  display: grid;
  grid-auto-flow: column;
  justify-content: start;
  column-gap: 60px;
}
.footer__logo {
  width: 142px;
}
.footer__social-list {
  display: grid;
  grid-auto-flow: column;
  column-gap: 16px;
}
.footer__social-link {
  fill: rgba(var(--color-white-rgba), 0.6);
  transition: fill 0.3s ease-in-out;
}
.footer__social-link:hover, .footer__social-link:focus-visible, .footer__social-link:active {
  fill: var(--color-primary);
}
.footer__social-icon {
  width: 24px;
  height: 24px;
}
.footer__descr {
  margin: 0;
  font-size: 14px;
  line-height: 1.5;
}
.footer__feedback {
  max-width: 495px;
}
.footer__feedback-title {
  margin: 0;
  font-size: 24px;
  line-height: 1.5;
  color: var(--color-white);
}
.footer__feedback-form {
  display: flex;
}
.footer__feedback-field {
  width: 100%;
}
.footer__feedback-field input {
  background: rgba(var(--color-white-rgba), 0.12);
  border-color: rgba(var(--color-white-rgba), 0.2);
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  color: var(--color-white);
}
.footer__feedback-field input::placeholder {
  color: rgba(var(--color-white-rgba), 0.6);
}
.footer__feedback-btn {
  padding: 0 25px;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  font-size: 14px;
}
.footer__feedback-descr {
  margin: 0;
  font-size: 12px;
  line-height: 1.5;
}
.footer__bottom {
  display: grid;
  grid-auto-flow: column;
  justify-content: space-between;
  justify-content: start;
}
.footer__address-title {
  margin: 0;
  font-size: 16px;
  line-height: 1.5;
  font-style: normal;
  text-transform: uppercase;
  color: var(--color-white);
}
.footer__address-name {
  color: var(--color-white);
}
.footer__nav-block {
  display: grid;
  grid-auto-flow: column;
  justify-content: start;
  column-gap: 125px;
}
.footer__block-title {
  margin: 0;
  font-size: 16px;
  line-height: 1.5;
  text-transform: uppercase;
  color: var(--color-white);
}
.hero-page {
  padding-top: 150px;
  padding-bottom: 80px;
  min-height: 600px;
  background-position: right top;
  background-repeat: no-repeat;
  background-color: var(--color-athens);
}
.hero-page--services {
  background-image: url("../img/services-hero-bg.png");
}
.hero-page--services-2 {
  background-image: url("../img/services-inner-hero-bg.png");
}
.hero-page--work {
  background-image: url("../img/work-hero-bg.png");
}
.hero-page--work-2 {
  background-image: url("../img/work-inner-hero-bg.png");
  background-position: right top 48px;
  background-color: var(--color-white);
}
.hero-page--about {
  background-image: url("../img/about-hero-bg.png");
}
.hero-page--positions {
  background-image: url("../img/positions-hero-bg.png");
  background-position: right bottom;
}
.hero-page--news {
  background-image: url("../img/news-hero-bg.png");
  background-position: right bottom;
}
.hero-page--post .hero-page__title {
  max-width: initial;
  font-size: 64px;
  line-height: 1.203125;
  text-transform: initial;
  margin-bottom: 50px;
}
.hero-page--contacts {
  background-image: url("../img/contacts-hero-bg.png");
  background-position: right bottom;
}
.hero-page__container {
  display: flex;
  flex-direction: column;
}
.hero-page__breadcrumbs {
  margin-bottom: 40px;
}
.hero-page__content {
  max-width: 600px;
}
.hero-page__title {
  margin: 0;
  margin-bottom: 24px;
  max-width: 600px;
  font-weight: 700;
  font-size: 72px;
  line-height: 1.3055555556;
  letter-spacing: 1px;
  text-transform: uppercase;
  color: var(--color-ebony);
}
.hero-page__title--small {
  font-size: 64px;
  line-height: 1.203125;
  text-transform: initial;
}
.hero-page__title--mb {
  margin-bottom: 60px;
}
.hero-page__descr {
  margin: 0;
  max-width: 600px;
  font-size: 20px;
  line-height: 1.5;
  color: var(--color-storm);
}
.hero-page__bottom {
  display: flex;
  justify-content: space-between;
}
.hero-page__meta .article-meta__item {
  font-size: 16px;
  line-height: 1.625;
}
.hero-page__meta a.article-meta__item {
  font-weight: 700;
  color: var(--color-primary);
}
.hero-page__meta time.article-meta__item {
  padding-left: 28px;
  background-image: url("../img/time.svg");
  background-position: left center;
  background-size: 20px 20px;
  background-repeat: no-repeat;
}
.hero-page__meta .article-meta__item--comments {
  padding-left: 29px;
  background-size: 20px 20px;
}
.hero-page__meta .article-meta__item:not(:last-child)::after {
  right: -14px;
  height: 16px;
  background-color: var(--color-storm);
}
.hero-page__social svg {
  fill: var(--color-storm);
  opacity: 1;
}

.breadcrumbs {
  display: flex;
  align-items: center;
}
.breadcrumbs__item {
  position: relative;
}
.breadcrumbs__item:not(:last-child) {
  margin-right: 22px;
}
.breadcrumbs__item:not(:last-child)::after {
  content: "/";
  position: absolute;
  right: -14px;
  top: 1px;
  color: #9a9cab;
}
.breadcrumbs__link {
  font-size: 14px;
  line-height: 1.5;
  color: var(--color-gray);
}
.breadcrumbs__link:not([href]) {
  color: #9a9cab;
}

.services-page {
  position: relative;
  overflow: hidden;
  padding-top: 120px;
  padding-bottom: 180px;
  background-color: var(--color-white);
}
.services-page__container {
  position: relative;
  z-index: 1;
}
.services-page__services-bg {
  position: absolute;
  width: 791px;
  height: 637px;
  opacity: 0.3;
  background: url("../img/global/bg.png");
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
}
.services-page__services-bg--decorate-1 {
  top: 30.7%;
  right: -395px;
  transform: rotate(-58deg);
}
.services-page__services-bg--decorate-2 {
  bottom: -83px;
  left: -498px;
  transform: rotate(213deg) scale(-1, 1);
}
.services-page__item {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.services-page__item:not(:last-child) {
  margin-bottom: 120px;
}
.services-page__item:nth-child(even) {
  flex-direction: row-reverse;
}
.services-page__img {
  max-width: 575px;
  width: 100%;
}
.services-page__info {
  max-width: 575px;
}
.services-page__info--ml {
  margin-left: 15px;
}
.services-page__info--mr {
  margin-right: 15px;
}
.services-page__title {
  margin: 0;
  margin-bottom: 24px;
  font-weight: 700;
  font-size: 32px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.services-page__descr {
  margin: 0;
  margin-bottom: 48px;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-storm);
}
.services-page__btn {
  font-size: 14px;
  padding: 15px 31px;
}

.we-offer {
  padding-top: 120px;
  padding-bottom: 120px;
}
.we-offer__container {
  display: grid;
  grid-auto-flow: column;
  justify-content: space-between;
  align-items: start;
  gap: var(--grid-gap);
}
.we-offer__image {
  max-width: 705px;
  width: 100%;
}
.we-offer__content {
  max-width: 420px;
}
.we-offer__title {
  margin-bottom: 60px;
  font-family: "Lato", sans-serif;
  font-weight: 900;
  font-size: 46px;
  line-height: 1.3043478261;
}

.accordion {
  display: grid;
  row-gap: 24px;
}
.accordion__item--active .accordion__icon--minus {
  visibility: visible;
  opacity: 1;
}
.accordion__item--active .accordion__icon--plus {
  visibility: hidden;
  opacity: 0;
}
.accordion__btn {
  display: grid;
  grid-auto-flow: column;
  align-items: flex-start;
  gap: 20px;
}
.accordion__icons {
  position: relative;
  margin-top: 10px;
  width: 24px;
  height: 24px;
}
.accordion__icon {
  position: absolute;
  inset: 0;
  width: 24px;
  height: 24px;
  fill: var(--color-primary);
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;
}
.accordion__icon--plus {
  visibility: visible;
  opacity: 1;
}
.accordion__heading {
  text-align: left;
  font-weight: 700;
  font-size: 28px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.accordion__panel {
  overflow: hidden;
  transition: max-height 0.5s ease-in-out;
}
.accordion__descr {
  margin: 0;
  padding-left: 42px;
  padding-top: 12px;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-storm);
}

.how-we-do {
  padding-top: 60px;
  padding-bottom: 120px;
}
.how-we-do__title {
  margin-bottom: 48px;
}
.how-we-do__list {
  counter-reset: section;
}
.how-we-do__item {
  grid-column: 3 span;
  counter-increment: section;
  cursor: pointer;
}
.how-we-do__item:hover .how-we-do__counter::before {
  color: #ff5a30;
  background-color: rgba(255, 90, 48, 0.12);
  outline-color: rgba(255, 90, 48, 0.06);
}
.how-we-do__counter {
  display: flex;
  align-items: center;
  margin-bottom: 3px;
  margin-left: -16px;
}
.how-we-do__counter::before {
  content: "0" counter(section);
  font-weight: 700;
  font-size: 46px;
  line-height: 1.3043478261;
  color: #d7dadd;
  margin-right: 8px;
  padding: 12px 15px;
  outline: 16px solid transparent;
  border-radius: 50%;
  transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out, outline-color 0.2s ease-in;
}
.how-we-do__counter:not(:last-child)::after {
  content: "";
  height: 1px;
  width: 100%;
  border-bottom: 1px dashed #d7dadd;
}
.how-we-do__subtitle {
  margin: 0;
  margin-bottom: 10px;
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.how-we-do__descr {
  margin: 0;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-storm);
}

.services-benefits {
  padding-top: 80px;
  background-color: var(--color-ebony);
}
.services-benefits__title {
  color: var(--color-white);
}
.services-benefits__list {
  --services-benefits-gap: 94px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  margin-bottom: 27px;
  gap: calc(var(--services-benefits-gap) * 2);
}
.services-benefits__item {
  position: relative;
  padding-top: 71px;
  text-align: center;
  background-position: top center;
  background-size: 48px 48px;
  background-repeat: no-repeat;
}
.services-benefits__item:not(:last-child)::after {
  content: "";
  position: absolute;
  right: calc(-1 * var(--services-benefits-gap));
  top: 0;
  width: 1px;
  height: 100%;
  background-image: url("../img/divider.svg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.services-benefits__item--terms {
  background-image: url("../img/terms.svg");
}
.services-benefits__item--workers {
  background-image: url("../img/workers.svg");
}
.services-benefits__item--control {
  background-image: url("../img/control.svg");
}
.services-benefits__item-title {
  margin: 0;
  margin-bottom: 10px;
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  color: var(--color-white);
}
.services-benefits__item-descr {
  margin: 0;
  margin-bottom: 60px;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-storm);
}
.services-benefits__btn-block {
  width: 100%;
  text-align: center;
}
.services-benefits__btn {
  padding: 18px 112px;
  transform: translateY(26px);
}

.projects__top {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  margin-bottom: 48px;
}
.projects__title {
  margin: 0;
  max-width: 710px;
}
.projects__slider-nav {
  transform: translate(12px, 12px);
}
.projects__items {
  margin-bottom: 80px;
  overflow: unset;
  overflow-x: clip;
}

.services-2__projects {
  padding-top: 180px;
  padding-bottom: 100px;
  background-color: var(--color-white);
}

.work-2__projects {
  padding-top: 180px;
  padding-bottom: 122px;
  background-color: var(--color-white);
}

.pricing {
  position: relative;
  padding-top: 80px;
  padding-bottom: 40px;
  background-color: #f4f5f7;
}
.pricing__decorate {
  position: absolute;
  left: 0;
  top: 0;
}
.table-wrapper {
  position: relative;
  z-index: 5;
  overflow: hidden;
  border: 1px solid #e5e8ed;
  border-collapse: collapse;
  border-radius: 4px;
  width: 100%;
  box-shadow: var(--small-shadow);
  background-color: var(--color-white);
}

.table {
  border-collapse: collapse;
  width: 100%;
}
.table__th {
  padding: 31px 20px 24px 0;
}
.table__th:first-child {
  vertical-align: bottom;
  padding-left: 24px;
  font-weight: 700;
  font-size: 18px;
  line-height: 1.5;
  text-align: left;
  color: var(--color-ebony);
}
.table__heading {
  margin-bottom: 2px;
  font-weight: 700;
  font-size: 24px;
  line-height: 1.5;
  text-align: center;
  text-transform: uppercase;
  color: var(--color-ebony);
}
.table__per {
  font-weight: 700;
  font-size: 18px;
  line-height: 1.5;
  text-align: center;
  color: var(--color-storm);
}
.table__body .table__row:nth-child(odd) {
  background-color: #f4f5f7;
}
.table__body .table__row:last-child .table__col {
  padding-top: 30px;
  padding-bottom: 30px;
}
.table__col {
  vertical-align: middle;
  padding: 16px 0;
  padding-right: 10px;
  font-size: 16px;
  line-height: 1.625;
  text-align: center;
  color: var(--color-gray);
}
.table__col .btn {
  padding: 0 20px;
  font-weight: 700;
  font-size: 12px;
  line-height: 3;
  letter-spacing: 0.5px;
  text-transform: uppercase;
}
.table__col:first-child {
  padding-left: 24px;
  text-align: left;
}
.table__check {
  display: inline-block;
  vertical-align: middle;
  width: 24px;
  height: 24px;
  font-size: 0;
  background-image: url("../img/table-check.svg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.table__text {
  font-size: 16px;
  line-height: 1.625;
  text-align: center;
  color: var(--color-gray);
}

.portfolio {
  position: relative;
  padding-bottom: 98px;
}
.portfolio__container {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
}

.portfolio-tabs-nav {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fit, 230px);
  justify-content: center;
  column-gap: 20px;
  row-gap: 20px;
  margin-bottom: 61px;
  transform: translateY(-60px);
}
.portfolio-tabs-nav__btn {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  padding: 15px;
  width: 100%;
  min-height: 154px;
  box-shadow: var(--small-shadow);
  color: var(--color-primary);
  background-color: var(--color-white);
  transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;
}
.portfolio-tabs-nav__btn--active {
  color: var(--color-white);
  background-color: var(--color-primary);
  pointer-events: none;
}
.portfolio-tabs-nav__btn--active .portfolio-tabs-nav__text {
  color: var(--color-white);
}
.portfolio-tabs-nav__btn:hover {
  border: 2px solid var(--color-primary);
}
.portfolio-tabs-nav__btn:hover .portfolio-tabs-nav__text {
  color: var(--color-ebony);
}
.portfolio-tabs-nav__icon {
  display: block;
  margin-bottom: 16px;
  width: 48px;
  height: 48px;
  color: inherit;
  fill: currentColor;
  object-fit: cover;
  pointer-events: none;
}
.portfolio-tabs-nav__text {
  font-weight: 700;
  font-size: 16px;
  line-height: 1.625;
  text-align: center;
  color: #9a9ca5;
  transition: color 0.3s ease-in-out;
  pointer-events: none;
}

.portfolio-tabs {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(390px, 1fr));
  column-gap: 30px;
  row-gap: 30px;
  margin-bottom: 60px;
}
.portfolio-tabs__item {
  display: none;
}
.portfolio-tabs__item--visible {
  display: block;
}
.portfolio-tabs__item--visible-more {
  display: block !important;
}

.portfolio-more {
  display: inline-flex;
  font-weight: 700;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-gray);
  transition: color 0.3s ease-in-out;
}
.portfolio-more svg {
  margin-right: 16px;
  width: 24px;
  height: 24px;
  color: inherit;
  fill: currentColor;
  object-fit: cover;
}
.portfolio-more:focus-visible {
  color: var(--color-active);
}
.portfolio-more:hover {
  color: var(--color-active);
}
.portfolio-more:active {
  color: var(--color-active);
}

.work-slider {
  overflow: hidden;
}
.work-slider__prev {
  position: absolute;
  left: 32px;
  top: 50%;
  z-index: 50;
  background-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-50%);
}
.work-slider__next {
  position: absolute;
  right: 32px;
  top: 50%;
  z-index: 50;
  background-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-50%);
}
.work-slider .swiper-slide img {
  display: block;
  border-radius: 4px;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.work-slider-images {
  position: relative;
  margin-bottom: 20px;
}

.work-slider-nav {
  overflow: hidden;
}
.work-slider-nav .swiper-slide {
  border-radius: 4px;
  opacity: 0.6;
  transition: opacity 0.3s ease-in-out;
  cursor: pointer;
}
.work-slider-nav .swiper-slide-thumb-active {
  opacity: 1;
}
.work-slider-nav .swiper-slide img {
  display: block;
  border-radius: 4px;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.project-goal {
  padding-top: 30px;
  padding-bottom: 120px;
}
.project-goal__left {
  padding-top: 24px;
  grid-column: span 6;
}
.project-goal__title {
  margin-bottom: 41px;
}
.project-goal__descr {
  margin: 0;
  margin-bottom: 27px;
  font-size: 18px;
  line-height: 1.5;
  color: var(--color-gray);
}
.project-goal__right {
  display: flex;
  justify-content: flex-end;
  grid-column: span 6;
}

.project-info {
  border-radius: 4px;
  padding: 27px 40px 40px 60px;
  width: 495px;
  min-height: 303px;
  box-shadow: var(--small-shadow);
  background-color: var(--color-white);
}
.project-info__item {
  display: flex;
}
.project-info__item:not(:last-child) {
  margin-bottom: 16px;
}
.project-info__category {
  width: 130px;
  font-weight: 700;
  font-size: 16px;
  line-height: 1.625;
  text-transform: uppercase;
  color: var(--color-ebony);
}
.project-info__value {
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-storm);
}

.constructive {
  padding-top: 80px;
  padding-bottom: 80px;
  background-color: var(--color-athens);
}
.constructive__left {
  grid-column: 5 span;
}
.constructive__left img {
  margin-bottom: -142px;
}
.constructive__right {
  grid-column: 7 span;
  padding-left: 104px;
}
.constructive__title {
  margin-bottom: 60px;
}
.constructive__item {
  position: relative;
  padding-left: 37px;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-gray);
}
.constructive__item::before {
  position: absolute;
  content: "";
  top: 3px;
  left: 0;
  width: 20px;
  height: 20px;
  background-image: url("../img/constructive-check.svg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.constructive__item:not(:last-child) {
  margin-bottom: 20px;
}

.statistics {
  padding-top: 120px;
  padding-bottom: 120px;
  background-color: var(--color-white);
}
.statistics__item {
  display: flex;
  flex-direction: column;
  align-items: center;
  grid-column: 3 span;
  padding-top: 70px;
  background-position: top center;
  background-size: 48px 48px;
  background-repeat: no-repeat;
}
.statistics__item--reccom {
  background-image: url("../img/like.svg");
}
.statistics__item--renov {
  background-image: url("../img/paint.svg");
}
.statistics__item--spec {
  background-image: url("../img/helmet.svg");
}
.statistics__item--finish {
  background-image: url("../img/pant.svg");
}
.statistics__value {
  margin-bottom: 8px;
  font-weight: 700;
  font-size: 46px;
  line-height: 1.3043478261;
  color: var(--color-primary);
}
.statistics__text {
  font-size: 14px;
  line-height: 1.5;
  text-align: center;
  color: var(--color-ebony);
}

.rezume {
  position: relative;
  overflow: hidden;
  padding-top: 140px;
  padding-bottom: 120px;
  background-color: var(--color-white);
}
.rezume::before {
  content: "";
  position: absolute;
  bottom: -297px;
  right: -365px;
  width: 1024px;
  height: 825px;
  background-image: url("../img/achieve-bg-2.png");
  transform: scale(1, -1) rotate(60deg);
  opacity: 0.2;
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
}
.rezume__content {
  display: flex;
  align-items: flex-start;
}
.rezume__info {
  position: relative;
  top: -130px;
  left: -30px;
  z-index: 10;
  flex-shrink: 0;
  border-radius: 4px;
  padding: 80px 46px 60px 80px;
  width: 735px;
  box-shadow: var(--small-shadow);
  background-color: var(--color-white);
}
.quote {
  margin: 0;
}
.quote__content {
  position: relative;
  padding: 10px 56px;
  margin-bottom: 30px;
}
.quote__content::before {
  content: "";
  position: absolute;
  top: 10px;
  left: -3px;
  width: 28px;
  height: 20px;
  background-image: url("../img/braces.svg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.quote__content p {
  margin: 0;
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.quote__content p:not(:last-child) {
  margin-bottom: 30px;
}
.quote__info {
  display: block;
  padding: 20px 55px;
  background-image: url("../img/signature.svg");
  background-position: right 60px center;
  background-size: 100px 68px;
  background-repeat: no-repeat;
}
.quote__author {
  margin: 0;
  margin-bottom: 4px;
  font-weight: 700;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-ebony);
}
.quote__post {
  margin: 0;
  font-size: 14px;
  line-height: 1.5;
  color: var(--color-storm);
}

.history {
  padding-top: 100px;
  padding-bottom: 100px;
  background-color: var(--color-athens);
}
.history__top {
  display: flex;
  justify-content: space-between;
  margin-bottom: 34px;
}
.history__slider-nav {
  transform: translate(12px, 6px);
}
.history__item {
  overflow: hidden;
  grid-column: 8 span;
}
.history__image {
  margin-bottom: 34px;
}
.history__descr {
  margin: 0;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-gray);
}

.history-nav {
  position: relative;
  grid-column: 4 span;
  padding-left: 40px;
}
.history-nav::before {
  content: "";
  position: absolute;
  border-radius: 50%;
  top: 0;
  left: 3.7px;
  width: 1px;
  height: 100%;
  background-color: var(--color-manatee);
}
.history-nav__item {
  position: relative;
}
.history-nav__item:not(:last-child) {
  margin-bottom: 20px;
}
.history-nav__btn {
  font-weight: 700;
  font-size: 28px;
  line-height: 1.5;
  text-align: left;
  color: var(--color-manatee);
  transition: color 0.2s ease-in-out;
}
.history-nav__btn::before {
  content: "";
  position: absolute;
  border-radius: 50%;
  z-index: 2;
  top: 50%;
  left: -40px;
  transform: translateY(-50%);
  width: 8px;
  height: 8px;
  background-color: currentColor;
  transition: background-color 0.2s ease-in-out;
}
.history-nav__btn::after {
  content: "";
  position: absolute;
  z-index: 1;
  top: 50%;
  left: -40px;
  transform: translateY(-50%);
  width: 8px;
  height: 16px;
  background-color: var(--color-athens);
  transition: background-color 0.2s ease-in-out;
}
.history-nav__btn--active {
  color: var(--color-primary);
}

.team {
  padding-top: 94px;
  padding-bottom: 120px;
  position: relative;
  overflow: hidden;
}
.team::before {
  content: "";
  position: absolute;
  left: -485px;
  bottom: -132px;
  width: 791px;
  height: 637px;
  opacity: 0.3;
  transform: rotate(126deg);
  background: url("../img/global/bg.png");
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
}
.team__container {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
}
.team__list {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(285px, 1fr));
  column-gap: 30px;
  row-gap: 60px;
  margin-bottom: 79px;
}
.team__item {
  cursor: pointer;
}
.team__item:hover .team__socials {
  opacity: 1;
  visibility: visible;
}
.team__top {
  position: relative;
  margin-bottom: 15px;
  font-size: 0;
}
.team__image {
  border-radius: 4px;
}
.team__socials {
  position: absolute;
  left: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 0 0 4px 4px;
  padding: 20px 10px;
  width: 100%;
  background-color: rgba(255, 90, 48, 0.7);
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;
}
.team__link {
  display: block;
  color: var(--color-white);
  transition: 0.5s ease-in-out;
}
.team__link svg {
  width: 20px;
  height: 20px;
  fill: currentColor;
  object-fit: cover;
}
.team__link:nth-child(1):focus-visible, .team__link:nth-child(1):hover, .team__link:nth-child(1):active {
  color: var(--color-blue);
}
.team__link:nth-child(2):focus-visible, .team__link:nth-child(2):hover, .team__link:nth-child(2):active {
  color: var(--color-primary);
}
.team__link:nth-child(3):focus-visible, .team__link:nth-child(3):hover, .team__link:nth-child(3):active {
  color: var(--color-ebony);
}
.team__link:not(:last-child) {
  margin-right: 12px;
}
.team__info {
  text-align: center;
}
.team__name {
  margin: 0;
  margin-bottom: 5px;
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  color: var(--color-gray);
}
.team__post {
  margin: 0;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-storm);
}
.team__text {
  font-size: 18px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.team__text a {
  border-bottom: 1px solid currentColor;
  color: var(--color-primary);
  transition: color 0.5s ease-in-out;
}
.team__text a:focus-visible, .team__text a:hover, .team__text a:active {
  color: var(--color-active);
}

.worldwide {
  padding-top: 80px;
  padding-bottom: 117px;
  background-color: var(--color-athens);
}
.worldwide__title {
  margin-bottom: 60px;
}

.positions-content {
  padding-top: 120px;
  padding-bottom: 80px;
}
.positions-content__left {
  grid-column: 7 span;
}
.positions-content__right {
  display: flex;
  justify-content: flex-end;
  grid-column: 5 span;
}

.positions-list__item:not(:last-child) {
  margin-bottom: 24px;
}

.positions-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  border: 1px solid var(--color-athens-gray);
  border-radius: 4px;
  padding: 32px 40px;
  background-color: var(--color-white);
}
.positions-item__meta {
  margin-bottom: 8px;
  font-size: 14px;
  line-height: 1.5;
  color: var(--color-storm);
}
.positions-item__city {
  position: relative;
  margin-right: 21px;
  padding-left: 23px;
  background-image: url("../img/city.svg");
  background-position: left center;
  background-size: 16px 16px;
  background-repeat: no-repeat;
}
.positions-item__city::after {
  content: "";
  position: absolute;
  right: -13px;
  top: 50%;
  width: 1px;
  height: 11px;
  background-color: currentColor;
  transform: translateY(-50%);
}
.positions-item__time {
  padding-left: 23px;
  background-image: url("../img/time.svg");
  background-position: left center;
  background-size: 16px 16px;
  background-repeat: no-repeat;
}
.positions-item__title {
  margin: 0;
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.positions-item__btn {
  padding: 11px 30px;
  font-size: 14px;
}
.positions-item__btn:hover {
  color: var(--color-white);
  background-color: var(--color-active);
  border-color: var(--color-active);
}
.positions-item__btn:active {
  color: var(--color-white);
  background-color: var(--color-active);
  border-color: var(--color-active);
}

.positions-looking {
  position: sticky;
  top: 15px;
  width: 390px;
}
.positions-looking__title {
  margin: 0;
  margin-bottom: 26px;
  font-weight: 700;
  font-size: 28px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.positions-looking__descr {
  margin: 0;
  margin-bottom: 47px;
  font-size: 18px;
  line-height: 1.5;
  color: var(--color-gray);
}
.positions-looking__btn--subs {
  margin-right: 27px;
  padding: 16px 43px;
}
.positions-looking__btn--subs:hover {
  color: var(--color-white);
  background-color: var(--color-active);
  border-color: var(--color-active);
}
.positions-looking__btn--subs:active {
  color: var(--color-white);
  background-color: var(--color-active);
  border-color: var(--color-active);
}
.positions-looking__btn--send {
  padding: 16px 52px;
}
.positions-looking__btn--send:hover {
  color: var(--color-white);
  background-color: var(--color-active);
  border-color: var(--color-active);
}
.positions-looking__btn--send:active {
  color: var(--color-white);
  background-color: var(--color-active);
  border-color: var(--color-active);
}

.categories {
  padding-top: 120px;
  padding-bottom: 180px;
}
.categories__container {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
}
.categories__title {
  margin-bottom: 40px;
}

.categories-nav {
  width: 100%;
  display: flex;
  align-items: center;
  margin-bottom: 60px;
}
.categories-nav__item {
  width: 16.6666666667%;
}
.categories-nav__btn {
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid transparent;
  border-radius: 4px;
  padding: 13px;
  width: 100%;
  font-size: 16px;
  color: var(--color-manatee);
  transition: color 0.3s ease-in-out;
}
.categories-nav__btn:hover {
  color: var(--color-primary);
}
.categories-nav__btn:active {
  color: var(--color-active);
}
.categories-nav__btn--active {
  border-color: currentColor;
  color: var(--color-primary);
}

.categories-list {
  row-gap: 60px;
  margin-bottom: 60px;
}
.categories-list__item {
  grid-column: 6 span;
}

.categories-pag {
  display: flex;
  align-items: center;
  justify-content: center;
}
.categories-pag__item:not(:last-child) {
  margin-right: 20px;
}
.categories-pag__link {
  font-weight: 700;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-gray);
  transition: color 0.3s ease-in-out;
}
.categories-pag__link svg {
  display: block;
  width: 24px;
  height: 24px;
  fill: currentColor;
  object-fit: cover;
}
.categories-pag__link:hover {
  color: var(--color-primary);
}
.categories-pag__link:active {
  color: var(--color-active);
}
.categories-pag__link--active {
  color: var(--color-primary);
}

.posts {
  padding-bottom: 180px;
}
.posts__cover {
  display: block;
  border-radius: 4px;
  margin-top: -80px;
  margin-bottom: 80px;
  width: 100%;
  object-fit: contain;
}
.posts__wrapper {
  margin: 0 auto;
  width: 100%;
  max-width: 810px;
  display: flex;
  flex-direction: column;
  color: var(--color-gray);
}
.posts__content {
  margin-bottom: 60px;
}
.posts__content h2 {
  margin: 0;
  margin-bottom: 25px;
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.posts__content h3 {
  margin: 0;
  margin-bottom: 25px;
  font-weight: 700;
  font-size: 18px;
  line-height: 1.6666666667;
  color: var(--color-ebony);
}
.posts__content p {
  display: block;
  margin: 0;
  margin-bottom: 25px;
  font-size: 16px;
  line-height: 1.625;
}
.posts__content p:last-child {
  margin-bottom: 0;
}
.posts__content blockquote {
  display: flex;
  margin: 0;
  padding: 25px 0 50px;
  font-weight: 700;
  font-size: 20px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.posts__content blockquote::before {
  content: "";
  flex: none;
  width: 28px;
  height: 20px;
  margin-right: 30px;
  background-image: url("../img/braces.svg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.posts__content ul {
  display: flex;
  flex-direction: column;
  font-size: 16px;
  line-height: 1.625;
  margin-bottom: 23px;
}
.posts__content ul li {
  display: flex;
  align-items: center;
}
.posts__content ul li:not(:last-child) {
  margin-bottom: 3px;
}
.posts__content ul li::before {
  content: "";
  flex: none;
  width: 16px;
  height: 16px;
  margin-right: 16px;
  background-image: url("../img/check-list.svg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.posts__share {
  display: flex;
  align-items: center;
  font-weight: 700;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-ebony);
  margin-bottom: 75px;
}
.posts__share span {
  margin-right: 12px;
}
.posts__share svg {
  fill: var(--color-storm);
  opacity: 1;
}
.comments {
  margin-bottom: 120px;
}
.comments__title {
  margin-bottom: 60px;
  text-align: center;
}
.comments__list {
  display: flex;
  flex-direction: column;
}
.comments__item:not(:last-child) {
  margin-bottom: 60px;
}

.comment {
  display: flex;
  align-items: flex-start;
}
.comment__left {
  margin-right: 30px;
  flex: none;
  display: flex;
  flex-direction: column;
  max-width: 150px;
  width: 150px;
}
.comment__title-author {
  margin: 0;
  margin-bottom: 8px;
  font-weight: 700;
  font-size: 18px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.comment__time {
  font-size: 14px;
  line-height: 1.5;
  color: var(--color-storm);
}
.comment__right {
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-gray);
}
.comment__right p {
  margin: 0;
  margin-bottom: 16px;
}
.comment__right a {
  font-weight: 700;
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-primary);
  transition: color 0.3s ease-in-out, fill 0.3s ease-in-out;
}
.comment__right a:hover {
  color: var(--color-active);
}
.comment__right a:active {
  color: var(--color-active);
}
.comment__right a:focus-visible {
  color: var(--color-active);
}
.comment__reply {
  display: flex;
  align-items: center;
  width: fit-content;
  color: var(--color-storm);
  transition: color 0.3s ease-in-out, fill 0.3s ease-in-out;
}
.comment__reply svg {
  margin-right: 8px;
  width: 16px;
  height: 16px;
  fill: currentColor;
  object-fit: cover;
}
.comment__reply span {
  font-size: 14px;
  line-height: 1.5;
}
.comment__reply:hover {
  color: var(--color-primary);
}
.comment__reply:active {
  color: var(--color-primary);
}
.comment__reply:focus-visible {
  color: var(--color-primary);
}

.post-form {
  display: grid;
}
.post-form__title {
  margin-bottom: 50px;
  text-align: center;
}
.post-form__field-block {
  display: grid;
  grid-template-columns: 1fr 1fr;
  column-gap: 30px;
  row-gap: 20px;
}
.post-form__field span {
  margin-bottom: 8px;
}
.post-form__field:nth-child(3) {
  grid-column: 1/3;
  margin-bottom: 16px;
}
.post-form__btn {
  grid-column: 1/3;
  justify-self: center;
  align-self: end;
  font-size: 16px;
  padding: 16px 40px;
}

.contacts {
  padding-top: 120px;
  padding-bottom: 80px;
}
.contacts__container {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.contacts__content {
  width: 100%;
  display: flex;
  justify-content: space-between;
  text-align: left;
}
.contacts__images-block {
  max-width: 495px;
  width: 100%;
}
.contacts__images {
  height: 100%;
  border-radius: 4px;
  background-image: url("../img/contacts-image.jpg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}

.form-contacts {
  flex: none;
  max-width: 600px;
  width: 100%;
  margin-left: 30px;
}
.form-contacts__block {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  column-gap: 30px;
  row-gap: 22px;
  margin-bottom: 28px;
}
.form-contacts__block span {
  margin-bottom: 10px;
}
.form-contacts__field:nth-child(7) {
  grid-column: 1/-1;
}

.radio {
  font-size: 16px;
  line-height: 1.625;
}
.radio-block {
  border: none;
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 1fr;
}
.radio__title {
  font-size: 16px;
  line-height: 1.625;
  margin-bottom: 5px;
}
.radio__inputs {
  display: grid;
  justify-self: start;
  align-self: center;
  grid-auto-flow: column;
  column-gap: 25px;
}
.radio input + span {
  position: relative;
  display: grid;
  grid-template-columns: 0fr 1fr;
  column-gap: 12px;
  align-items: center;
  margin: 0;
}
.radio input + span::before {
  content: "";
  width: 16px;
  height: 16px;
  background-color: var(--color-white);
  border: 1px solid #b3b7bc;
  border-radius: 50%;
  transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out;
}
.radio input + span::after {
  content: "";
  position: absolute;
  left: 4px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: transparent;
  transition: background-color 0.2s ease-in-out;
}
.radio input:checked + span::before {
  border-color: var(--color-primary);
}
.radio input:checked + span::after {
  background-color: var(--color-primary);
}
.radio input:disabled + span {
  opacity: 0.5;
}
.radio:focus-visible input + span::before, .radio:hover input + span::before, .radio:active input + span::before {
  border-color: var(--color-primary);
  box-shadow: var(--input-shadow);
}

.contacts-form__checkbox-btn {
  display: grid;
  grid-template-columns: 1.5fr 1fr;
  column-gap: 30px;
}
.contacts-form__checkbox {
  font-size: 16px;
  line-height: 1.625;
}
.contacts-form__btn {
  justify-self: end;
  align-self: end;
  padding: 15px 42px;
}

.contacts-info {
  padding-top: 122px;
  padding-bottom: 119px;
}
.contacts-info__container {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.contacts-info__list {
  --contacts-gap: 120px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  margin-bottom: 118px;
  gap: calc(var(--contacts-gap) * 2);
}
.contacts-info__item {
  position: relative;
}
.contacts-info__item:not(:last-child)::after {
  content: "";
  position: absolute;
  right: calc(-1 * var(--contacts-gap));
  top: 0;
  width: 1px;
  height: 100%;
  background-image: url("../img/divider.svg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.contacts-info__item-title {
  margin: 0;
  margin-bottom: 24px;
  font-weight: 700;
  font-size: 28px;
  line-height: 1.5;
  color: var(--color-ebony);
}
.contacts-info__address {
  display: inline-block;
  margin-bottom: 9px;
  font-size: 16px;
  line-height: 1.625;
  font-style: normal;
  color: var(--color-ebony);
}
.contacts-info__link {
  display: inline-block;
  margin-bottom: 24px;
  border-bottom: 1px solid currentColor;
  font-size: 16px;
  color: var(--color-primary);
  transition: color 0.3s ease-in-out;
}
.contacts-info__link:hover {
  color: var(--color-active);
}
.contacts-info__link:active {
  color: var(--color-active);
}
.contacts-info__element {
  font-size: 16px;
  line-height: 1.625;
  color: var(--color-storm);
}
.contacts-info__element:not(:last-child) {
  margin-bottom: 5px;
}
.contacts-info__value {
  color: var(--color-ebony);
  transition: color 0.3s ease-in-out;
}
.contacts-info__value:hover {
  color: var(--color-active);
}
.contacts-info__value:active {
  color: var(--color-active);
}
.contacts-info__soc {
  margin-bottom: 41px;
}
.contacts-info__social {
  justify-content: center;
}

.social__item:not(:last-child) {
  margin-right: 24px;
}
.social__link {
  width: 32px;
  height: 32px;
}
.social__link svg {
  fill: var(--color-storm);
  opacity: 1;
  transition: fill 0.3s ease-in-out;
}
.social__link svg:hover, .social__link svg:focus-visible, .social__link svg:active {
  fill: var(--color-primary);
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 10;
  background-color: rgba(30, 33, 44, 0.75);
  transition: visibility 0.3s ease-in-out, opacity 0.3s ease-in-out;
  visibility: hidden;
  opacity: 0;
}
.modal--active {
  visibility: visible;
  opacity: 1;
}
.modal__container {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.modal__content {
  visibility: hidden;
  opacity: 0;
  position: absolute;
  overflow-y: auto;
  text-align: center;
  max-height: 95vh;
  width: 486px;
  padding: 48px;
  background-color: var(--color-white);
  border: 1px solid var(--color-athens-gray);
  box-shadow: 0px 60px 80px -20px rgba(30, 33, 44, 0.16), 0px 26px 24px -10px rgba(30, 33, 44, 0.1), 0px 12px 10px -6px rgba(30, 33, 44, 0.08), 0px 4px 4px -4px rgba(30, 33, 44, 0.05);
  border-radius: 4px;
  transition: visibility 0.3s ease-in-out, opacity 0.3s ease-in-out;
}
.modal__content--active {
  visibility: visible;
  opacity: 1;
  position: relative;
}
.modal__close {
  position: absolute;
  top: 24px;
  right: 24px;
}
.modal__close-icon {
  width: 24px;
  height: 24px;
  fill: #787a80;
}

.positions-modal__title {
  margin: 0;
  font-weight: 700;
  font-size: 28px;
  line-height: 1.5;
  color: var(--color-ebony);
  margin-bottom: 24px;
}
.positions-modal__field-block {
  display: grid;
  grid-template-columns: 1fr;
  row-gap: 20px;
  margin-bottom: 35px;
}
.positions-modal__field-block span:not(:last-child) {
  margin-bottom: 8px;
}
.positions-modal__btn {
  padding: 15px 0;
  width: 100%;
  font-weight: 700;
  font-size: 14px;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */